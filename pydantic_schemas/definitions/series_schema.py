# generated by datamodel-codegen:
#   filename:  series-schema.json
#   timestamp: 2024-07-23T17:17:24+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import Field

from .schema_base_model import SchemaBaseModel


class Model(SchemaBaseModel):
    pass


class Alias(SchemaBaseModel):
    alias: Optional[str] = Field(None, title="Alias")


class DefinitionReference(SchemaBaseModel):
    source: Optional[str] = Field(None, title="Source")
    uri: str = Field(..., description="URI", title="URI")
    note: Optional[str] = Field(None, description="Note", title="Note")


class RelatedConcept(SchemaBaseModel):
    name: str = Field(..., title="Name")
    definition: Optional[str] = Field(None, description="Definition", title="Definition")


class Topic(SchemaBaseModel):
    topic: str = Field(..., title="Topic")
    vocabulary: Optional[str] = Field(
        None, description="Name of the controlled vocabulary, if the topic is from a taxonomy.", title="Vocabulary"
    )
    uri: Optional[str] = Field(
        None,
        description="Link to the controlled vocabulary web page, if the topic is from a taxonomy.",
        title="Vocabulary URI",
    )


class SeriesDate(SchemaBaseModel):
    start: Optional[str] = Field(None, title="Start")
    end: Optional[str] = Field(None, title="End")


class GeographicUnit(SchemaBaseModel):
    name: str = Field(
        ..., description="Name of the geographic unit e.g. 'World', 'Africa', 'Afghanistan'", title="Location name"
    )
    code: Optional[str] = Field(
        None, description="Code of the geographic unit (for countries, preferred = ISO3 code)", title="Location code"
    )
    type: Optional[str] = Field(
        None, description="Type of geographic unit e.g. country, state, region, province etc", title="Type"
    )


class SerAccessLicense(SchemaBaseModel):
    type: Optional[str] = Field(None, title="License type")
    uri: Optional[str] = Field(None, title="URI")


class SeriesLink(SchemaBaseModel):
    type: Optional[str] = Field(None, description="Link types - API, website, etc.", title="Link type")
    description: Optional[str] = Field(None, title="Description")
    uri: Optional[str] = Field(None, title="URI")


class ApiDocumentation(SchemaBaseModel):
    """
    API Documentation
    """

    description: Optional[str] = Field(None, title="Description")
    uri: Optional[str] = Field(None, title="URI")


class Keyword(SchemaBaseModel):
    name: Optional[str] = Field(None, title="Keyword")
    vocabulary: Optional[str] = Field(None, title="Vocabulary")
    uri: Optional[str] = Field(None, title="URI")


class Note(SchemaBaseModel):
    note: Optional[str] = Field(None, title="Note")


class RelatedIndicator(SchemaBaseModel):
    code: Optional[str] = Field(None, title="Indicator code")
    label: Optional[str] = Field(None, title="Indicator name")
    uri: Optional[str] = Field(None, title="URI")


class ComplianceItem(SchemaBaseModel):
    standard: Optional[str] = Field(None, title="Standard name")
    organization: Optional[str] = Field(None, title="Organization name")
    uri: Optional[str] = Field(None, title="URI")


class SeriesGroup(SchemaBaseModel):
    name: Optional[str] = Field(None, title="Name")
    version: Optional[str] = Field(None, title="Version")
    uri: Optional[str] = Field(None, title="URI")


class Series(SchemaBaseModel):
    idno: str = Field(..., description="Unique series ID", title="Series unique ID")
    name: str = Field(..., title="Series Name")
    db_idno: Optional[str] = Field(None, description="Series database ID", title="Database ID")
    aliases: Optional[List[Alias]] = Field(None, title="Series other names")
    measurement_unit: Optional[str] = Field(None, title="Series unit of measure")
    periodicity: Optional[str] = Field(None, title="Periodicity of data")
    base_period: Optional[str] = Field(None, title="Base period")
    definition_short: Optional[str] = Field(None, title="Definition short")
    definition_long: Optional[str] = Field(None, title="Definition long")
    definition_references: Optional[List[DefinitionReference]] = Field(
        None,
        description="URL to standard definition of the indicator (international or national standard)",
        title="Definition references",
    )
    related_concepts: Optional[List[RelatedConcept]] = Field(
        None, description="Related concepts", title="Related concepts"
    )
    methodology: Optional[str] = Field(None, title="Methodology")
    imputation: Optional[str] = Field(None, title="Imputations")
    quality_checks: Optional[str] = Field(None, title="Quality control methods")
    quality_note: Optional[str] = Field(None, title="Note on data quality")
    series_break: Optional[str] = Field(None, title="Breaks in series")
    statistical_concept: Optional[str] = Field(None, title="Statistical concept")
    limitation: Optional[str] = Field(None, title="Limitations  and exceptions")
    topics: Optional[List[Topic]] = Field(None, description="Topics covered by the indicator", title="Topics")
    relevance: Optional[str] = Field(None, title="Relavance")
    series_dates: Optional[List[SeriesDate]] = Field(None, title="Series dates")
    geographic_units: Optional[List[GeographicUnit]] = Field(
        None,
        description=(
            "List of geographic units (regions, countries, states, provinces, etc.) for which data are available in the"
            " database."
        ),
        title="Geographic locations",
    )
    aggregation_method: Optional[str] = Field(None, title="Aggregation method")
    ser_access_license: Optional[SerAccessLicense] = Field(None, title="Access licence")
    confidentiality: Optional[str] = Field(
        None, description="Confidentiality statement", title="Confidentiality statement"
    )
    confidentiality_status: Optional[str] = Field(None, title="Confidentiality status")
    confidentiality_note: Optional[str] = Field(None, title="Confidentiality note")
    series_links: Optional[List[SeriesLink]] = Field(
        None, description="Links to API calls, websites, etc.", title="Series links"
    )
    api_documentation: Optional[ApiDocumentation] = Field(None, description="API Documentation")
    source: Optional[str] = Field(None, title="Original source")
    source_note: Optional[str] = Field(None, title="Notes form original source")
    keywords: Optional[List[Keyword]] = Field(None, description="Keywords")
    notes: Optional[List[Note]] = Field(None, description="Notes", title="Notes")
    related_indicators: Optional[List[RelatedIndicator]] = Field(None, description="Related indicators")
    compliance: Optional[List[ComplianceItem]] = Field(
        None, description="Compliance with international resolution", title="Compliance with international resolution"
    )
    series_groups: Optional[List[SeriesGroup]] = Field(
        None, description="Series included in groups", title="Series groups"
    )
